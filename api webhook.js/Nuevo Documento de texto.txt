

const axios = require('axios');

module.exports = async (req, res) => {
  const VERIFY_TOKEN = 'taxci2024';

  if (req.method === 'GET') {
    const mode = req.query['hub.mode'];
    const token = req.query['hub.verify_token'];
    const challenge = req.query['hub.challenge'];

    if (mode === 'subscribe' && token === VERIFY_TOKEN) {
      console.log('‚úÖ Webhook verificado correctamente');
      return res.status(200).send(challenge);
    } else {
      return res.sendStatus(403);
    }
  }

  if (req.method === 'POST') {
    const entry = req.body.entry?.[0];
    const message = entry?.changes?.[0]?.value?.messages?.[0];

    if (message) {
      const phoneNumberId = entry.changes[0].value.metadata.phone_number_id;
      const from = message.from;
      const text = message.text?.body || '';

      console.log(`üì© Mensaje recibido: ${text} de ${from}`);

      // ‚ö†Ô∏è PEGA TU TOKEN TEMPORAL DE META ENTRE COMILLAS
      const token = 'AQU√ç_TU_TOKEN_TEMPORAL';

      try {
        await axios.post(
          `https://graph.facebook.com/v18.0/${phoneNumberId}/messages`,
          {
            messaging_product: 'whatsapp',
            to: from,
            text: { body: 'Hola üëã, soy tu asistente de Taxi. ¬øDeseas pedir un viaje, mototaxi o reparto?' }
          },
          {
            headers: {
              Authorization: `Bearer ${token}`,
              'Content-Type': 'application/json'
            }
          }
        );
        console.log('‚úÖ Respuesta enviada');
      } catch (error) {
        console.error('‚ùå Error al responder:', error.response?.data || error.message);
      }
    }

    res.sendStatus(200);
  } else {
    res.sendStatus(405); // M√©todo no permitido
  }
};
